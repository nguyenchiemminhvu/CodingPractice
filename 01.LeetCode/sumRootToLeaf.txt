https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    int sumRootToLeaf(TreeNode* root) 
    {
        int sum = 0;
        std::string bits;
        sumUtil(root, bits, sum);
        
        return sum;
    }
private:
    void sumUtil(TreeNode* root, std::string& bits, int& sum)
    {
        if (!root)
            return;
        
        bits.push_back(root->val + '0');
        if (!root->left && !root->right)
        {
            std::bitset<1000> bs(bits);
            sum += bs.to_ulong();
        }
        
        sumUtil(root->left, bits, sum);
        sumUtil(root->right, bits, sum);
        bits.pop_back();
    }
};