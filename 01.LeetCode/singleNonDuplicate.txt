https://leetcode.com/problems/single-element-in-a-sorted-array/

class Solution 
{
public:
    int singleNonDuplicate(vector<int>& nums) 
    {
        if (nums.size() == 1)
            return nums[0];
        
        return searchUtil(nums, 0, nums.size() - 1);
    }
private:
    int searchUtil(const std::vector<int>& nums, int left, int right)
    {
        if (left > right)
            return -1;
        
        int mid = (left + right) / 2;
        if (mid == 0)
        {
            if (nums[mid + 1] != nums[mid])
                return nums[mid];
            return -1;
        }
        
        if (mid == nums.size() - 1)
        {
            if (nums[mid - 1] != nums[mid])
                return nums[mid];
            return -1;
        }
        
        if (nums[mid] != nums[mid - 1] && nums[mid] != nums[mid + 1])
            return nums[mid];
        
        int res = searchUtil(nums, left, mid - 1);
        if (res != -1)
            return res;
        
        return searchUtil(nums, mid + 1, right);
    }
};