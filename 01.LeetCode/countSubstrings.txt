https://leetcode.com/problems/palindromic-substrings/

class Solution 
{
public:
    int countSubstrings(const string& s) 
    {
        std::vector<std::vector<bool>> dp(s.length(), std::vector<bool>(s.length(), false));
        buildDP(s, dp);
        
        int res = s.length();
        for (int len = 2; len <= s.length(); len++)
        {
            for (int i = 0; i <= s.length() - len; i++)
            {
                int j = i + len - 1;
                res += dp[i][j];
            }
        }
        return res;
    }
private:
    void buildDP(const std::string& s, std::vector<std::vector<bool>>& dp)
    {
        for (int i = 0; i < s.length(); i++)
        {
            dp[i][i] = true;
        }
        
        for (int i = 0, j = 1; j < s.length(); i++, j++)
        {
            if (s[i] == s[j])
            {
                dp[i][j] = true;
            }
        }
        
        for (int len = 3; len <= s.length(); len++)
        {
            for (int i = 0; i <= s.length() - len; i++)
            {
                int j = i + len - 1;
                
                if (dp[i + 1][j - 1] && s[i] == s[j])
                {
                    dp[i][j] = true;
                }
            }
        }
    }
};