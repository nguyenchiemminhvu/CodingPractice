https://leetcode.com/problems/design-an-ordered-stream/

class OrderedStream 
{
public:
    OrderedStream(int n) 
    {
        this->n = n;
        cur = 1;
    }
    
    vector<string> insert(int idKey, string value) 
    {
        values[idKey] = value;
        
        std::vector<std::string> vs;
        for (int i = cur; i <= cur; i++)
        {
            if (values[i].empty())
            {
                break;
            }
            
            vs.push_back(values[i]);
            cur++;
        }
        return vs;
    }
private:
    std::unordered_map<int, std::string> values;
    int n;
    int cur;
};

/**
 * Your OrderedStream object will be instantiated and called as such:
 * OrderedStream* obj = new OrderedStream(n);
 * vector<string> param_1 = obj->insert(idKey,value);
 */