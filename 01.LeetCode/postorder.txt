https://leetcode.com/problems/n-ary-tree-postorder-traversal/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution 
{
public:
    vector<int> postorder(Node* root) 
    {
        std::vector<int> res;
        postorderUtil(root, res);
        return res;
    }
private:
    void postorderUtil(Node* root, std::vector<int>& res)
    {
        if (!root)
            return;
        
        for (Node*& n : root->children)
        {
            postorderUtil(n, res);
        }
        res.push_back(root->val);
    }
};