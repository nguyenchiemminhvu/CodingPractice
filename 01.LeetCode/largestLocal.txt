class Solution 
{
public:
    vector<vector<int>> largestLocal(vector<vector<int>>& grid) 
    {
        std::vector<std::vector<int>> res;
        
        for (int i = 1; i < grid.size() - 1; i++)
        {
            res.push_back(std::vector<int>());
            for (int j = 1; j < grid[i].size() - 1; j++)
            {
                int cur_max = INT_MIN;
                
                cur_max = std::max(cur_max, grid[i - 1][j - 1]);
                cur_max = std::max(cur_max, grid[i - 1][j]);
                cur_max = std::max(cur_max, grid[i - 1][j + 1]);
                
                cur_max = std::max(cur_max, grid[i][j - 1]);
                cur_max = std::max(cur_max, grid[i][j]);
                cur_max = std::max(cur_max, grid[i][j + 1]);
                
                cur_max = std::max(cur_max, grid[i + 1][j - 1]);
                cur_max = std::max(cur_max, grid[i + 1][j]);
                cur_max = std::max(cur_max, grid[i + 1][j + 1]);
                
                res.back().push_back(cur_max);
            }
        }
        
        return res;
    }
};