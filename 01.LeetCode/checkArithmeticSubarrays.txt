https://leetcode.com/problems/arithmetic-subarrays/

class Solution 
{
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r)
    {
        std::vector<bool> res(l.size(), false);
        for (int i = 0; i < l.size(); i++)
        {
            std::vector<int> temp(nums.begin() + l[i], nums.begin() + r[i] + 1);
            std::sort(temp.begin(), temp.end());
            res[i] = true;
            if (temp.size() <= 2)
                continue;
            int diff = temp[1] - temp[0];
            for (int j = 1; j < temp.size(); j++)
            {
                if (temp[j] - temp[j - 1] != diff)
                {
                    res[i] = false;
                    break;
                }
            }
        }
        return res;
    }
};


