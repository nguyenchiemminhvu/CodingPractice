https://leetcode.com/problems/average-of-levels-in-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
        std::vector<double> res;
        
        std::queue<TreeNode*> Q;
        Q.push(root);
        
        double prevSum = 0;
        int prevLevel = 0;
        int curLevel = 1;
        int nextLevel = 0;
        
        while (!Q.empty())
        {
            TreeNode* cur = Q.front();
            Q.pop();
            curLevel--;
            prevSum += cur->val;
            prevLevel++;
            
            if (cur->left)
            {
                Q.push(cur->left);
                nextLevel++;
            }
            if (cur->right)
            {
                Q.push(cur->right);
                nextLevel++;
            }
            
            if (curLevel == 0)
            {
                res.push_back(prevSum / prevLevel);
                prevLevel = 0;
                prevSum = 0;
                
                curLevel = nextLevel;
                nextLevel = 0;
            }
        }
        
        return res;
    }
};