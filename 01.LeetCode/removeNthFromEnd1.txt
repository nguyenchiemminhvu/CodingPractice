https://leetcode.com/problems/remove-nth-node-from-end-of-list/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
        head = reverse(head);
        head = removeNth(head, n);
        head = reverse(head);
        
        return head;
    }
private:
    ListNode* reverse(ListNode* head)
    {
        ListNode* prev = nullptr;
        ListNode* cur = head;
        ListNode* next = nullptr;
        
        while (cur)
        {
            next = cur->next;
            cur->next = prev;
            prev = cur;
            cur = next;
        }
        
        return prev;
    }
    
    ListNode* removeNth(ListNode* head, int n)
    {
        ListNode* prev = nullptr;
        ListNode* cur = head;
        
        while (n > 1)
        {
            prev = cur;
            cur = cur->next;
            n--;
        }
        
        if (prev)
        {
            prev->next = cur->next;
        }
        else
        {
            head = cur->next;
        }
        
        return head;
    }
};