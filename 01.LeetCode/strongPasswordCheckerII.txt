https://leetcode.com/problems/strong-password-checker-ii/

class Solution 
{
public:
    bool strongPasswordCheckerII(const std::string& p) 
    {
        if (p.length() < 8)
            return false;
        
        bool found_upper = (p[0] >= 'A' && p[0] <= 'Z');
        bool found_lower = (p[0] >= 'a' && p[0] <= 'z');
        bool found_digit = (p[0] >= '0' && p[0] <= '9');
        bool found_special = isSpecial(p[0]);
        
        for (int i = 1; i < p.length(); i++)
        {
            if (p[i] == p[i - 1])
                return false;
            
            found_upper |= (p[i] >= 'A' && p[i] <= 'Z');
            found_lower |= (p[i] >= 'a' && p[i] <= 'z');
            found_digit |= (p[i] >= '0' && p[i] <= '9');
            found_special |= isSpecial(p[i]);
        }
        
        if (!found_upper || !found_lower || !found_digit || !found_special)
            return false;
        
        return true;
    }
private:
    bool isSpecial(char c)
    {
        std::string checker = "!@#$%^&*()-+";
        if (checker.find_first_of(c) != std::string::npos)
        {
            return true;
        }
        
        return false;
    }
};