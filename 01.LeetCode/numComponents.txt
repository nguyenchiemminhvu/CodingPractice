https://leetcode.com/problems/linked-list-components/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    int numComponents(ListNode* head, vector<int>& nums) 
    {
        std::sort(nums.begin(), nums.end());
        
        int count = 0;
        
        while (head)
        {
            if (std::binary_search(nums.begin(), nums.end(), head->val))
            {
                count++;
                
                while (head && std::binary_search(nums.begin(), nums.end(), head->val))
                {
                    head = head->next;
                }
                
                if (head)
                {
                    head = head->next;
                }
            }
            else
            {
                head = head->next;
            }
        }
        
        return count;
    }
};