class Solution 
{
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& mat) 
    {
        std::vector<int> res;
        bool rev = true;
        
        for (int i = 0; i < mat[0].size(); i++)
        {
            std::vector<int> temp;
            int r = 0;
            int c = i;
            while (r < mat.size() && c >= 0)
            {
                temp.push_back(mat[r][c]);
                r++;
                c--;
            }
            
            if (rev)
            {
                std::reverse(temp.begin(), temp.end());
            }
            rev = !rev;
            
            res.insert(res.end(), temp.begin(), temp.end());
        }
        
        for (int i = 1; i < mat.size(); i++)
        {
            std::vector<int> temp;
            int r = i;
            int c = mat[0].size() - 1;
            while (r < mat.size() && c >= 0)
            {
                temp.push_back(mat[r][c]);
                r++;
                c--;
            }
            
            if (rev)
            {
                std::reverse(temp.begin(), temp.end());
            }
            rev = !rev;
            res.insert(res.end(), temp.begin(), temp.end());
        }
        
        return res;
    }
};