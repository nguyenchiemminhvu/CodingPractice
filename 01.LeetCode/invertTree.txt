https://leetcode.com/problems/invert-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    TreeNode* invertTree(TreeNode* root) 
    {
        return invertUtil(root);
    }
private:
    TreeNode* invertUtil(TreeNode* root)
    {
        if (!root)
            return nullptr;
        
        TreeNode* temp = root->left;
        root->left = invertUtil(root->right);
        root->right = invertUtil(temp);
        return root;
    }
};