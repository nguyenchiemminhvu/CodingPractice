https://leetcode.com/problems/unique-paths/

class Solution 
{
public:
    int uniquePaths(int m, int n) 
    {
        // return generating(m, n, 0, 0);
        
        std::vector<std::vector<int>> dp(m, std::vector<int>(n, 0));
        for (int i = 0; i < m; i++)
        {
            dp[i][0] = 1;
        }
        
        for (int i = 0; i < n; i++)
        {
            dp[0][i] = 1;
        }
        
        for (int i = 1; i < m; i++)
        {
            for (int j = 1; j < n; j++)
            {
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        
        return dp[m - 1][n - 1];
    }
private:
    int generating(int m, int n, int i, int j)
    {
        if (i >= m || j >= n)
            return 0;
        
        if (i == m - 1 && j == n - 1)
            return 1;
        
        return generating(m, n, i + 1, j) + generating(m, n, i, j + 1);
    }
};