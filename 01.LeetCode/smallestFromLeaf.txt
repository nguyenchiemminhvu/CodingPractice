https://leetcode.com/problems/smallest-string-starting-from-leaf/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    string smallestFromLeaf(TreeNode* root) 
    {
        if (!root)
            return "";
        
        std::vector<std::string> strs;
        std::string temp;
        traversal(root, temp, strs);
        
        std::sort(strs.begin(), strs.end());
        return strs[0];
    }
private:
    void traversal(TreeNode* root, std::string& temp, std::vector<std::string>& strs)
    {
        if (!root)
            return;
        
        temp.push_back('a' + root->val);
        if (!root->left && !root->right)
        {
            strs.push_back(std::string(temp.rbegin(), temp.rend()));
        }
        
        traversal(root->left, temp, strs);
        traversal(root->right, temp, strs);
        
        temp.pop_back();
    }
};