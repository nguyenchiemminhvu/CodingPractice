https://leetcode.com/problems/design-browser-history/

class DList
{
public:
    DList(const std::string& u)
    {
        url = u;
        prev = next = nullptr;
    }
    
    ~DList()
    {
        
    }
public:
    std::string url;
    DList* prev;
    DList* next;
};

class BrowserHistory 
{
public:
    BrowserHistory(const string& page) 
    {
        cur = new DList(page);
    }
    
    void visit(string url) 
    {
        DList* page = new DList(url);
        cur->next = page;
        page->prev = cur;
        cur = page;
    }
    
    string back(int steps) 
    {
        while (steps && cur->prev)
        {
            cur = cur->prev;
            steps--;
        }
        
        return cur->url;
    }
    
    string forward(int steps) 
    {
        while (steps && cur->next)
        {
            cur = cur->next;
            steps--;
        }
        
        return cur->url;
    }
private:
    DList* cur;
};

/**
 * Your BrowserHistory object will be instantiated and called as such:
 * BrowserHistory* obj = new BrowserHistory(homepage);
 * obj->visit(url);
 * string param_2 = obj->back(steps);
 * string param_3 = obj->forward(steps);
 */