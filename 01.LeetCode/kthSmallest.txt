https://leetcode.com/problems/kth-smallest-element-in-a-bst/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    int kthSmallest(TreeNode* root, int k) 
    {
        std::priority_queue<int> max_heap;
        traversal(root, max_heap);
        while (max_heap.size() > k)
            max_heap.pop();
        
        return max_heap.top();
    }
private:
    void traversal(TreeNode* root, std::priority_queue<int>& max_heap)
    {
        if (!root)
            return;
        
        traversal(root->left, max_heap);
        max_heap.push(root->val);
        traversal(root->right, max_heap);
    }
};