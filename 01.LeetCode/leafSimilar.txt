https://leetcode.com/problems/leaf-similar-trees/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) 
    {
        std::vector<int> L1;
        leafUtil(root1, L1);
        
        std::vector<int> L2;
        leafUtil(root2, L2);
        
        return L1 == L2;
    }
private:
    void leafUtil(TreeNode* root, std::vector<int>& L)
    {
        if (!root)
            return;
        
        if (!root->left && !root->right)
            L.push_back(root->val);
        
        leafUtil(root->left, L);
        leafUtil(root->right, L);
    }
};