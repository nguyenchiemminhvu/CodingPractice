https://leetcode.com/problems/satisfiability-of-equality-equations/

class Solution 
{
public:
    bool equationsPossible(vector<string>& exps) 
    {
        std::vector<std::vector<char>> graph(26, std::vector<char>());
        
        for (const std::string& exp : exps)
        {
            if (exp[1] == '=')
            {
                graph[exp[0] - 'a'].push_back(exp[3] - 'a');
                graph[exp[3] - 'a'].push_back(exp[0] - 'a');
            }
            else if (exp[1] == '!')
            {
                if (exp[0] == exp[3])
                    return false;
            }
        }
        
        for (const std::string& exp : exps)
        {
            if (exp[1] == '!')
            {
                std::vector<bool> visited(26, false);
                if (DFS(graph, exp[0] - 'a', exp[3] - 'a', visited))
                    return false;
            }
        }
        
        return true;
    }
private:
    bool DFS(const std::vector<std::vector<char>>& graph, int start, int end, std::vector<bool>& visited)
    {
        bool res = false;
        for (int i = 0; i < graph[start].size(); i++)
        {
            if (graph[start][i] == end)
            {
                return true;
            }
            
            if (!visited[graph[start][i]])
            {
                visited[graph[start][i]] = true;
                res |= DFS(graph, graph[start][i], end, visited);
            }
        }
        
        return res;
    }
};