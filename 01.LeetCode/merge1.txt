https://leetcode.com/problems/merge-intervals/

class Solution 
{
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) 
    {
        std::vector<std::vector<int>> res;
        
        std::sort
        (
            intervals.begin(), 
            intervals.end(), 
            [](const std::vector<int>& a, const std::vector<int>& b)
            {
                if (a[0] < b[0])
                    return true;
                if (a[0] > b[0])
                    return false;
                return a[1] < b[1];
            }
        );
        
        int cur = -1;
        for (int i = 0; i < intervals.size(); i++)
        {
            if (cur == -1)
            {
                cur = i;
            }
            else
            {
                if (intervals[i][0] <= intervals[cur][1])
                {
                    intervals[cur][1] = std::max(intervals[cur][1], intervals[i][1]);
                }
                else
                {
                    res.push_back(intervals[cur]);
                    cur = i;
                }
            }
        }
        
        res.push_back(intervals[cur]);
        return res;
    }
};