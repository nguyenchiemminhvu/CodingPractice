https://leetcode.com/problems/validate-binary-search-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    bool isValidBST(TreeNode* root) 
    {
        std::vector<int> nums;
        traversal(root, nums);
        
        for (int i = 1; i < nums.size(); i++)
        {
            if (nums[i] <= nums[i - 1])
                return false;
        }
        
        return true;
    }
private:
    void traversal(TreeNode* root, std::vector<int>& nums)
    {
        if (!root)
            return;
        
        traversal(root->left, nums);
        nums.push_back(root->val);
        traversal(root->right, nums);
    }
};