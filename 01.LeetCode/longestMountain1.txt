https://leetcode.com/problems/longest-mountain-in-array/description/'

class Solution 
{
public:
    int longestMountain(vector<int>& arr) 
    {
        if (arr.size() < 3)
            return 0;

        int longest = 0;
        int left = 0, right = 0;
        std::vector<int> diff;
        for (int i = 1; i < arr.size(); i++)
        {
            if (arr[i] == arr[i - 1])
            {
                diff.clear();
                continue;
            }

            if (arr[i] > arr[i - 1])
            {
                if (diff.empty())
                {
                    left = i - 1;
                    diff.push_back(arr[i] - arr[i - 1]);
                }
                else
                {
                    if (isSameSign(arr[i] - arr[i - 1], diff.back()))
                    {
                        diff.push_back(arr[i] - arr[i - 1]);
                    }
                    else
                    {
                        right = i - 1;
                        longest = std::max(longest, right - left + 1);
                        left = i - 1;
                        diff.clear();
                        diff.push_back(arr[i] - arr[i - 1]);
                    }
                }
            }
            else if (arr[i] < arr[i - 1])
            {
                if (diff.empty())
                    continue;
                
                if (isSameSign(arr[i] - arr[i - 1], diff[0]))
                    continue;
                
                diff.push_back(arr[i] - arr[i - 1]);
                right = i;
                longest = std::max(longest, right - left + 1);
            }
        }

        return longest;
    }
private:
    bool isSameSign(int a, int b)
    {
        return (a >= 0) ^ (b < 0);
    }
};