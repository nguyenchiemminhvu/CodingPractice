https://leetcode.com/problems/top-k-frequent-words/description/

class Solution 
{
public:
    vector<string> topKFrequent(vector<string>& words, int k) 
    {
        std::unordered_map<std::string, int> freq;
        for (const std::string& word : words)
        {
            freq[word]++;
        }

        std::sort(
            words.begin(), 
            words.end(), 
            [&](const std::string& a, const std::string& b) 
            {
                if (freq[a] > freq[b])
                    return true;
                if (freq[a] < freq[b])
                    return false;
                return a < b;
            }
        );

        std::vector<std::string> res;
        res.push_back(words[0]);
        for (int i = 1; i < words.size() && k > 1; i++)
        {
            if (words[i] != res.back())
            {
                res.push_back(words[i]);
                k--;
            }
        }
        return res;
    }
};