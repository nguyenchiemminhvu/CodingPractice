https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/

class Solution 
{
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
//         for (int i = 0; i < nums.size(); i++)
//         {
//             if (target - nums[i] < nums[i])
//                 break;
            
//             int found = binarySearch(nums, i + 1, target - nums[i]);
//             if (found != -1)
//                 return {i + 1, found + 1};
//         }
        
        int left = 0, right = nums.size() - 1;
        while (left < right)
        {
            int sum = nums[left] + nums[right];
            if (sum == target)
            {
                return {left + 1, right + 1};
            }
            else if (sum < target)
            {
                left++;
            }
            else
            {
                right--;
            }
        }
        
        return {};
    }
private:
    int binarySearch(const std::vector<int>& nums, int start, int target)
    {
        auto it = std::lower_bound(nums.begin() + start, nums.end(), target);
        if (it == nums.end() || *it != target)
            return -1;
        
        return std::distance(nums.begin(), it);
    }
};